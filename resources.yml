# Notes DynamoDB Table
notesTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: notes-${self:provider.stage}
    BillingMode: PAY_PER_REQUEST
    AttributeDefinitions:
      - AttributeName: notesId
        AttributeType: S
    KeySchema:
      - AttributeName: notesId
        KeyType: HASH

# Cognito User Pool
cognitoUserPool:
  Type: AWS::Cognito::UserPool
  Properties:
    UserPoolName: NotesUserPool-${self:provider.stage}

# Cognito User Pool Client
cognitoUserWebClient:
  Type: AWS::Cognito::UserPoolClient
  Properties:
    UserPoolId: !Ref cognitoUserPool
    ClientName: web
    AllowedOAuthFlowsUserPoolClient: true
    SupportedIdentityProviders:
      - COGNITO
    AllowedOAuthScopes:
      - phone
      - email
      - openid
      - profile
    ExplicitAuthFlows:
      - ALLOW_ADMIN_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      - ALLOW_CUSTOM_AUTH
      - ALLOW_USER_SRP_AUTH
    AllowedOAuthFlows:
      - implicit
    CallbackURLs:
      - http://localhost:3000

# User Pool Domain
cognitoUserDomain:
  Type: AWS::Cognito::UserPoolDomain
  Properties:
    UserPoolId: !Ref cognitoUserPool
    Domain: mynotescddemos-${self:provider.stage}

# Application parameters
userPoolArnParams:
  Type: AWS::SSM::Parameter
  Properties:
    Name: /notes/${self:provider.stage}/userPoolArn
    Type: String
    Value: !GetAtt cognitoUserPool.Arn

# Cache policy
restCachePolicy:
  Type: AWS::CloudFront::CachePolicy
  Properties:
    CachePolicyConfig:
      Comment: String
      DefaultTTL: 300 # 300 mean 5 minute
      MaxTTL: 31536000 # seconds (one year)
      MinTTL: 60 # 1 minute
      Name: RestAPICachePolicy
      ParametersInCacheKeyAndForwardedToOrigin:
        CookiesConfig:
          CookieBehavior: none
        EnableAcceptEncodingBrotli: true
        EnableAcceptEncodingGzip: true
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - Authorization
        QueryStringsConfig:
          QueryStringBehavior: none

# CloudFront Distribution
cloudFrontDistribution:
  Type: AWS::CloudFront::Distribution
  Properties:
    DistributionConfig:
      Enabled: true
      DefaultCacheBehavior:
        TargetOriginId: restAPIOrigin
        CachePolicyId: !Ref restCachePolicy
        ViewerProtocolPolicy: https-only
      CacheBehaviors:
        - PathPattern: /dev/*
          TargetOriginId: restAPIOrigin
          CachePolicyId: !Ref restCachePolicy
          ViewerProtocolPolicy: https-only
      Origins:
        - Id: restAPIOrigin
          DomainName: !Join
            - '.'
            - - !Ref ApiGatewayRestApi
              - 'execute-api'
              - ${aws:region}
              - 'amazonaws.com'
          CustomOriginConfig:
            OriginProtocolPolicy: https-only
